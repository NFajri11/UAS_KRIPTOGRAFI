# -*- coding: utf-8 -*-
"""Kualitas citra.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_iRC0zylofAyikrieYi7LgMyh5TiuJdG
"""



from google.colab import files
from PIL import Image
import cv2
import numpy as np
import io
import matplotlib.pyplot as plt

def calculate_psnr(original, compressed):
    mse = np.mean((original - compressed) ** 2)
    if mse == 0:
        return float('inf')
    max_pixel = 255.0
    psnr = 20 * np.log10(max_pixel / np.sqrt(mse))
    return psnr

# Meminta pengguna untuk mengunggah file
uploaded = files.upload()

# Baca gambar dari objek byte
gambar_byte = list(uploaded.values())[0]

# Konversi objek byte menjadi objek gambar menggunakan PIL
gambar = Image.open(io.BytesIO(gambar_byte))

# Konversi gambar PIL menjadi array NumPy
gambar_array = np.array(gambar)

# Menampilkan gambar asli
print("Gambar Asli:")
plt.imshow(gambar_array)
plt.axis('off')
plt.show()

# Simpan gambar asli untuk perhitungan PSNR
cv2.imwrite('makan.png', cv2.cvtColor(gambar_array, cv2.COLOR_RGB2BGR))

# Pilih tingkat kualitas JPEG untuk kompresi (0-100)
kualitas_jpeg = 50  # Ubah sesuai kebutuhan

# Simpan citra hasil kompresi menggunakan kualitas JPEG
cv2.imwrite('makancompre.jpg', cv2.cvtColor(gambar_array, cv2.COLOR_RGB2BGR), [int(cv2.IMWRITE_JPEG_QUALITY), kualitas_jpeg])

# Memuat citra asli dan citra terkompresi
original_image = cv2.imread('makan.png')
compressed_image = cv2.imread('makancompre.jpg')

# Ubah citra menjadi tipe data float32
original_image = original_image.astype(np.float32)
compressed_image = compressed_image.astype(np.float32)

# Hitung PSNR
psnr_value = calculate_psnr(original_image, compressed_image)

# Tampilkan hasil PSNR
print(f"\nPSNR Value: {psnr_value} dB")

# Menampilkan gambar terkompresi (jika ada)
print("\nGambar Terkompresi:")
plt.imshow(cv2.cvtColor(compressed_image, cv2.COLOR_BGR2RGB))
plt.axis('off')
plt.show()